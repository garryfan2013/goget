// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";


package api;

// Interface exported by the server.
service GoGet {
  // A simple RPC.
  //
  // Add a goget job.
  //
  rpc Add(Job) returns (Id) {}

  // A server-to-client RPC.
  //
  // Obtains the Current job progress
  //
  rpc Progress(Id) returns (Stats) {}

  // A client-to-server RPC.
  //
  // Accepts a job id
  //
  rpc Stop(Id) returns (Stats) {}
}

// A job represents a download, provided with neccessary information
message Job {
  // The url of the resource to be downloaded
  string url = 1;

  // The file path to be saved
  string path = 2;

  // Username for auth, such as ftp download, an account is always needed
  string username = 3;

  // Password for auth
  string passwd = 4;

  // The cnt indicates the thread count for cocurrent downloading
  int64 cnt = 5;
}

// A Id represent a specified job
message Id {
  // The string format of given uuid
  string uuid = 1;
}

// A Stats consists of progress information for a specified job
message Stats {
  // The name of the feature.
  int64 size = 1;

  // The point where the feature is detected.
  int64 done = 2;
}

// A Id represent a specified job
message Result {
  // The string format of given uuid
  string uuid = 1;
}